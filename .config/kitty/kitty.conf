# testing if we need this as doesn't seem to take on first run.
# also no need when NOT in tmux. TODO further test; resolve tmux or drop it.
# 1. Set passthrough mode as the default for all new windows
# startup_command kitty @ set-window-env passthrough=yes

# 2. Define Ctrl+Shift+P as a passthrough-exempt keybinding to toggle passthrough mode
map passthrough_key ctrl+shift+p passthrough_toggle; \
    if test "$(kitty @ get-window-env passthrough)" = "yes"; then \
        kitty @ set-window-env passthrough=no; \
    else \
        kitty @ set-window-env passthrough=yes; \
    fi

# BEGIN_KITTY_THEME
# Catppuccin-Mocha
include current-theme.conf
# END_KITTY_THEME
# Use 'kitten theme' to see available themes (will update top of this file)

# Make sure you have the fonts installed
# you can use 'kitty +kitten choose-fonts' to choose a font (only monospaced fonts are supported)
# don't patch fonts or worry about nerd fonts
# see https://sw.kovidgoyal.net/kitty/faq/#kitty-is-not-able-to-use-my-favorite-font
# BEGIN_KITTY_FONTS
font_family      family="Comic Code"
bold_font        auto
italic_font      auto
bold_italic_font auto
# END_KITTY_FONTS
font_size 12.0

scrollback_lines 10000
# TODO add tmux support and recognize bash if needed might be set by system
# The following command checks if tmux is installed.
# If tmux is installed, it automatically attaches to an existing tmux session.
# If no tmux session exists, a new one is created.
# If tmux is not installed, it simply starts zsh without tmux.
# shell zsh --login -c "if command -v tmux >/dev/null 2>&1; then tmux attach || tmux; else zsh; fi"

# Old version of above command:
# The 2 commands after login are needed to automatically attach to an existing
# tmux session, if no session exists, a new one is created
# shell zsh --login -c "tmux attach || tmux"

# When you do fn+ctrl+shift+2  or command+, on a mac; opens this config file in the system editor
# use default shell and editor
shell .
editor .

# Make kitty borderless
# "yes" disables round corners and hides the title bar
# "titlebar-only" leaves round corners but hides title bar
# hide_window_decorations yes
hide_window_decorations titlebar-only

#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.
window_padding_width 0 0 0 0

# I'm adding these below the theme in case the theme sets them
cursor #ffffff
cursor_text_color #000000

#: Ask for confirmation when closing an OS window or a tab with at
#: least this number of kitty windows in it by window manager (e.g.
#: clicking the window close button or pressing the operating system
#: shortcut to close windows) or by the close_tab action. A value of
#: zero disables confirmation. This confirmation also applies to
#: requests to quit the entire application (all OS windows, via the
#: quit action). Negative values are converted to positive ones,
#: however, with shell_integration enabled, using negative values
#: means windows sitting at a shell prompt are not counted, only
#: windows where some command is currently running. Note that if you
#: want confirmation when closing individual windows, you can map the
#: close_window_with_confirmation action.
confirm_os_window_close 0

open_url_with default



