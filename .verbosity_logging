#!/usr/bin/env bash
# This file defines the sb and log functions for verbosity-based logging.
# by default there is no logging, but if user wants to call sb with -v or -vv or -vvv
# then the logging will appear at 3 levels of detail.

# Prevent sourcing multiple times
if [ -n "${VERBOSITY_LOGGING_LOADED:-}" ]; then
    return
fi
export VERBOSITY_LOGGING_LOADED=1

# Display usage information
function sb_help() {
    clear
    printf "NOTE: rudimusmaximu/configDotFiles"
    printf "Usage:\n"
    printf "  To run locally :  sb [options]\n\n"
    printf "Options:\n"
    printf "  -h       Display this help message\n"
    printf "  -v       Verbose (show logging)\n"
}

# Log function to print messages based on verbosity levels
# Usage: verbLog <level> <message>
function verbLog() {
    # Usage: verbLog <level> <message>
    local level=$1
    shift

    # Only log if verbose mode is enabled
    if [ "${verbose:-false}" = true ]; then
        case $level in
            1) prefix="[LOG] ✔ " ;;
            2) prefix="[LOG] ✔ ✔ " ;;
            3) prefix="[LOG] ✔ ✔ ✔ " ;;
            *) prefix="[LOG] ✔ ✔ ✔ + " ;;
        esac

        # Print the log message with the appropriate prefix
        printf "%s%s\n" "$prefix" "$@"
    fi
}

# sb function to set verbosity, and source .bash_profile
function sb() {

    # Default to non-verbose mode
    verbose=false

    # Parse options using getopts
    while getopts "hv" opt; do
        case $opt in
            h)
                sb_help
                return 0
                ;;
            v)
                verbLog 2 "Running function sb()..."
                verbose=true
                export verbose  # Make verbose available to sourced files
                ;;
            \?)
                printf "\n  Option does not exist: -%s\n\n" "$OPTARG"
                sb_help
                return 1
                ;;
        esac
    done

    # Always source .bash_profile after parsing options
    source "$HOME"/.bash_profile
    verbose=false
}
