# shellcheck shell=bash

# COMMON CONFIGURATION
# ====================

# Bun (see https://bun.sh/)
export BUN_INSTALL="$HOME/.bun" 
export PATH="$BUN_INSTALL/bin:$PATH"

# Jetbrains toolbox - shell scripts path
export PATH="$HOME/bin:$PATH"

# N Added by n-install for n-update, n-uninstall (see http://git.io/n-install-repo)
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# OS SPECIFIC CONFIGURATION
# =========================

# Darwin (macOS)-specific items
if [[ "$(uname)" == "Darwin" ]]; then
    # edgedb-cli
    export PATH="$HOME/Library/Application Support/edgedb/bin:$PATH"

    # Check for Intel iMac
    if [[ "$(uname -m)" == "x86_64" ]]; then
        # Intel-specific configurations
        export BASH_HOMEBREW_HOME='/usr/local/bin';
        export PATH="$BASH_HOMEBREW_HOME:$PATH";
        # Other Intel-specific configurations can go here
    fi

    # Check for Apple Silicon
    if [[ "$(uname -m)" == "arm64" ]]; then
        # Apple Silicon-specific configurations
        export BASH_HOMEBREW_HOME='/opt/homebrew/bin';
        export PATH="$BASH_HOMEBREW_HOME:$PATH";
        # export PATH="$HOME/bin:$PATH";

        # Other Apple Silicon-specific configurations can go here
    fi

    # Golang
    # best practice to setup workspace after brew update&& brew install golang
    # mkdir -p $HOME/go/{bin,src,pkg}
    # setup environemnt to work with this workspace for go (start any project under ~/go/src)
    export GOPATH="$HOME/go"
    GOROOT="$(brew --prefix golang)/libexec"
    export GOROOT
    export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"


    # Java OpenJDK
    # for running google closure compiler from jar file (brew caveats as apple
    # installs similar files so take care of install instructions)
    export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
    export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"

    # MIT Scheme
    export PATH="$PATH:$HOME/projects/mit-scheme-12.1/src/mit-scheme.app/Contents/Resources"
fi

# Fedora Linux-specific items
if [ -f /etc/os-release ] && grep -q 'ID=fedora' /etc/os-release; then
    : # Placeholder for future Fedora-specific configurations
fi

