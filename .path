#!/usr/bin/env bash

# COMMON CONFIGURATION
# ====================

# Bun (see https://bun.sh/)
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Jetbrains toolbox - shell scripts path
export PATH="$HOME/bin:$PATH"

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# local bin use by python pip installs
export PATH="$HOME/.local/bin:$PATH"

# tmuxifier for session layouts (installed via TPM in .tmux.conf) see $HOME/.tmux/plugins
export PATH="$HOME/.tmux/plugins/tmuxifier/bin:$PATH"

# OS SPECIFIC CONFIGURATION
# =========================

# Enhance bash-completion if completion is available
function enhance_bash_completion() {
    if [[ -r "${HOME}/.git-completion" ]]; then
        source "${HOME}/.git-completion"
        verbLog 2 ".git-completion is available and has been sourced. Remember to sync_git_completion on git updates."
    else
        printf "⚠️ %s\n" "expected .git-completion is NOT available."
    fi

    if [[ -r "${HOME}/.git-flow-completion" ]]; then
        source "${HOME}/.git-flow-completion"
        verbLog 2 ".git-flow-completion is available and has been sourced."
    else
        printf "⚠️ %s\n" "expected .git-flow-completion is NOT available."
    fi
}

# Darwin (macOS)-specific items
if [[ "$(uname)" == "Darwin" ]]; then
    architecture=$(sysctl -n machdep.cpu.brand_string)

    # edgedb-cli
    export PATH="$HOME/Library/Application Support/edgedb/bin:$PATH"

    # Check for Apple Silicon iMac
    if [[ "$architecture" == *"Apple"* ]]; then
        # Homebrew
        HOMEBREW_PREFIX="/opt/homebrew"
        BASH_HOMEBREW_HOME="${HOMEBREW_PREFIX}/bin"
        if ! [[ "$PATH" =~ (^|:)"$BASH_HOMEBREW_HOME"(:|$) ]]; then
          export PATH="$BASH_HOMEBREW_HOME:$PATH"
        fi

        # Establish bash-completion
        # shellcheck disable=SC1091
        if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
            source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
            enhance_bash_completion
        else
            printf "⚠️  %s\n" "Warning: bash-completion not found in expected Homebrew Apple Silicon location."
        fi
        # The next line updates PATH for the Google Cloud SDK.
        if [ -f "${HOME}/google-cloud-sdk/path.bash.inc" ]; then . "${HOME}/google-cloud-sdk/path.bash.inc"; fi

        # The next line enables shell command completion for gcloud.
        if [ -f "${HOME}/google-cloud-sdk/completion.bash.inc" ]; then . "${HOME}/google-cloud-sdk/completion.bash.inc"; fi

    # Check for Intel macOS
    elif [[ "$architecture" == "Intel"* ]]; then
        # Homebrew
        HOMEBREW_PREFIX="/usr/local"
        BASH_HOMEBREW_HOME="${HOMEBREW_PREFIX}/bin"
        if ! [[ "$PATH" =~ (^|:)"$BASH_HOMEBREW_HOME"(:|$) ]]; then
          export PATH="$BASH_HOMEBREW_HOME:$PATH"
        fi

        # Establish bash-completion
        # shellcheck disable=SC1091
        if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
            source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
            enhance_bash_completion
        else
            printf "⚠️  %s\n" "Warning: bash-completion not found in expected Homebrew location on Intel macOS location."
        fi
    fi

    # Java OpenJDK
    # for running google closure compiler from jar file (brew caveats as apple
    # installs similar files so take care of install instructions)
    export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
    export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"

    # MIT Scheme
    export PATH="$PATH:$HOME/projects/mit-scheme-12.1/src/mit-scheme.app/Contents/Resources"
fi

# Fedora Linux-specific items
# Detecting Feora on Apple Silicon via Asahi Linux
# TODO: make sure no changes needed for adding git-flow and bash-completion
if [[ "$(uname)" == "Linux" ]]; then
      # Establish bash-completion
      # shellcheck disable=SC1091
      if [[ -r "/usr/share/bash-completion/bash_completion" ]]; then
          # Fedora default location
          source "/usr/share/bash-completion/bash_completion"
          enhance_bash_completion
      else
          printf "⚠️  %s\n" "Warning: bash-completion not found in expected Linux location."
      fi
fi

