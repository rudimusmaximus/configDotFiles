#!/bin/bash
# above only so we can run shellcheck on it
install_rcm_scopes_as_npmrc () {
  if [[ -f "$HOME/.npmrc" ]]
  then
  echo "$HOME/.npmrc exists on your filesystem. Remove or rename and try again."
  else {
  echo "@redcrowconsulting:registry=https://npm.pkg.github.com/redcrowconsulting" > ~/.npmrc
  echo "@redcrowmethods:registry=https://npm.pkg.github.com/redcrowmethods" >> ~/.npmrc
  echo "//npm.pkg.github.com/:_authToken=$RFJ_PAT_GH_NPM_PKG_REGISTRY" >> ~/.npmrc
  echo "Created $HOME/.npmrc with redcrowmethods and redcrowconsulting scopes and auth"
  # echo "You will need to log into registry with a PAT with read to use and write to develop"
  # echo "Try pnpm login --registry=https://npm.pkg.github.com and use matching username and email"
  }
fi
}

file_exists () {

# Using argument expansion to capture all files provided as arguments.
for FILE in "${@}"
do
  if [[ ! -f $FILE ]]
  then
    echo "The file ${FILE} does not exist!"
  fi
done
}

list () {
  echo "ls in color with -F designations"
  ls -F
}

recent () {
  echo "$1 most recent file(s) added to the current directory";
  # ignore Use find instead of ls to better handle non-alphanumeric filenames.
  # shellcheck disable=SC2012
  ls -Artl | tail -n "$1";
}

go_home () {
  echo "Welcome ~ \$HOME"
  cd ~ || exit
  pwd
}

function vp { 
  echo "prerelease semVer++ in package.json";
  npm --no-git-tag-version version prerelease --preid="$1"; 
}

function aliases {
  mapfile -t my_array < <( compgen -A alias );
  echo "${my_array[@]}";
}

function functions {
  mapfile -t my_array < <( compgen -A function );
  echo "${my_array[@]}";
}

function findAndReplaceBsd {
  echo "
   OK ---> FIND '$1' and
   REPLACE WITH '$2' (on a BSD system like macOS or FreeBSD)...";
  foo="$1";
  bar="$2";
  echo "
   --- BEFORE ---";
  rg "$1"
  echo "
   --- AFTER --- RIPGREP '$2' ---"
  rg --files-with-matches "$foo" | xargs sed -i '' "s|$foo|$bar|g";
  rg "$2";
  echo "";
}
